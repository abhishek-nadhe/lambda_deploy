name: Deploy Lambda Function

on:
  push:
    branches:
      - main
#   workflow_dispatch:

jobs:
  deploy_lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: 3.8

      - name: Export variables from secret
        run: |
          ENV_JSON='${{ secrets.AWS_DEV_INFRA }}'
          echo "$ENV_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"' >> $GITHUB_ENV
          cat $GITHUB_ENV
          
      - name: Set AWS CLI credentials and region
        run: |
          aws configure set aws_access_key_id $ACCESS_KEY_ID
          aws configure set aws_secret_access_key $SECRET_ACCESS_KEY
          aws configure set region $DEFAULT_REGION

      - name: Install AWS CLI
        run: |
          sudo apt-get install -y python3-pip
          pip3 install awscli --upgrade

      - name: Zip Lambda function
        run: |
          zip -r function.zip ./src/amp_lambda_function/lambda_function.py

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code --function-name $LAMBDA_FUNC --zip-file fileb://function.zip --region $DEFAULT_REGION
          sleep 15s
          aws lambda update-function-configuration --function-name $LAMBDA_FUNC --tracing-config Mode=Active --environment "Variables={LOG_GROUP_NAME=${LAMBDA_LG}}" --handler src/amp_lambda_function/lambda_function.py

      # - name: Set permissions for private key
      #   run: |
      #    echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
      #     chmod 600 ${{ secrets.PRIVATE_KEY_PEM }}
     
      - name: Send logs to EC2 instance
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY_PEM }}
          HOSTNAME: ${{secrets.EC2_USER}}
          USER_NAME: ${{secrets.EC2_1_IP}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          aws logs filter-log-events \
            --log-group-name "$LAMBDA_LG" \
            --filter-pattern "" \
            --output text \
            --query 'events[*].message' | \
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "mkdir -p ~/$GITHUB_JOB && cat >> ~/$GITHUB_JOB/aws_lambda_logs.txt"
          echo "Logs have been sent."  
